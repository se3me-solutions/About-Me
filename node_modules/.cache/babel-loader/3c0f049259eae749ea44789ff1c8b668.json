{"remainingRequest":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js!/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vascomartins/Documents/Dev/aboutme/src/views/Quiz2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vascomartins/Documents/Dev/aboutme/src/views/Quiz2.vue","mtime":1554497700746},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase, { firestore } from 'firebase';\nimport { setTimeout } from 'timers';\nvar usersCollection = firebase.firestore().collection(\"users\");\nvar quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\nvar questionsCollection = firebase.firestore().collection(\"questions\");\nexport default {\n  name: 'Quiz2',\n  data: function data() {\n    return {\n      perguntas: [],\n      respostasCorretas: [],\n      respostasBase: [],\n      respostas: [],\n      leaderboardJogadores: [],\n      criadorQuiz: null,\n      jogadorQuiz: null,\n      percentagem: -1,\n      urlCopy: 'https://aboutme.se3me.com/quiz/' + this.$route.params.quizUrl,\n      criadorDoc: '',\n      respondido: false,\n      leaderboard: false\n    };\n  },\n\n  /*\n      - Verificar se está logado\n      - Verificar se o utilizador corrente é igual ao utilizador que criou o quiz\n          - Enviar para a leaderboard\n      - Senão\n          - Verificar se o utilizador corrente já respondeu ao quiz\n              - Enviar para leaderboard\n          - Senão\n              - Iniciar o jogo\n   */\n  mounted: function mounted() {\n    var _this = this;\n\n    // Definimos a variável carregado como false para definirmos que a página não deverá ser carregada\n    this.carregado = false;\n\n    if (!this.$router.params.quizUrl) {\n      this.$router.push('/');\n    } // Caso o utilizador não esteja logado\n\n\n    if (!this.$store.getters.getUser()) {\n      this.$router.push('/login/');\n    }\n\n    this.jogadorQuiz = this.$store.getters.getUser();\n    usersCollection.where(\"uid\", \"==\", this.jogadorQuiz.uid).get().then(function (snapshot) {\n      if (_this.$router.params.quizUrl === snapshot.docs[0].id) {\n        _this.mostrarLeaderboard(true, null);\n      } else {\n        quemSabeMais.where(\"doc\", \"==\", _this.$route.params.quizUrl).get().then(function (snapshot) {\n          var quemRespondeu = snapshot.docs[0].data().otherAnswers;\n          _this.leaderboardJogadores = quemRespondeu;\n          _this.criadorDoc = snapshot.docs[0].id;\n          usersCollection.doc(_this.$route.params.quizUrl).get().then(function (query) {\n            _this.criadorQuiz = query.data().name;\n          });\n\n          for (var i = 0; i < quemRespondeu.length; i++) {\n            // Caso o utilizador corrente já tenha respondido ao quiz\n            if (quemRespondeu[i][\"user\"] === _this.jogadorQuiz.uid) {\n              _this.mostrarLeaderboard(false, i);\n\n              return;\n            }\n          }\n        });\n      }\n    }); // Recebe as respostas corretas\n\n    this.receberPerguntasERespostas();\n    this.carregado = true;\n  },\n  methods: {\n    /**\n     * Exibe a leaderboard\n     * @param isCreator\n     * @param user\n     */\n    mostrarLeaderboard: function mostrarLeaderboard(isCreator, user) {\n      if (!isCreator || !user) {\n        this.percentagem = this.leaderboardJogadores[user][\"percentage\"];\n      }\n\n      this.leaderboard = true;\n      this.carregado = true;\n    },\n\n    /**\n     * Função que responde à pergunta atual.\n     * Caso seja detetado que o Quiz terminou, é chamado o procedimento terminarQuiz.\n     * @param resposta\n     */\n    responderPergunta: function responderPergunta(resposta) {\n      var _this2 = this;\n\n      this.respondido = true;\n      setTimeout(function () {\n        _this2.reposta.push(resposta);\n\n        _this2.respondido = false;\n      }, 3 * 1000);\n\n      if (this.respostas.length === this.respostasCorretas.length) {\n        this.terminarQuiz();\n      }\n    },\n\n    /**\n     * Procedimento para terminar o Quiz\n     * Os dados são guardados na base de dados\n     */\n    terminarQuiz: function terminarQuiz() {\n      var _this3 = this;\n\n      this.calcularPercentagem();\n      quemSabeMais.doc(this.criadorDoc).update({\n        otherAnswers: firestore.FieldValue.arrayUnion({\n          \"user\": this.jogadorQuiz.uid,\n          \"percentage\": this.percentagem\n        }),\n        leaderboardPontuation: firestore.FieldValue.arrayUnion({\n          \"name\": this.jogadorQuiz.name,\n          \"percentage\": this.percentagem\n        })\n      }).then(function () {\n        _this3.mostrarLeaderboard(false, null);\n      });\n    },\n\n    /**\n     * Calcula a percentagem de respostas corretas\n     */\n    calcularPercentagem: function calcularPercentagem() {\n      var percentagem = 0;\n\n      for (var i = 0; i < this.respostasCorretas.length; i++) {\n        if (this.respostas[i] === this.respostasCorretas[i]) {\n          percentagem += 10;\n        }\n      }\n\n      this.percentagem = percentagem;\n    },\n\n    /**\n     * Recebe as perguntas e as respostas do Quiz\n     */\n    receberPerguntasERespostas: function receberPerguntasERespostas() {\n      var _this4 = this;\n\n      questionsCollection.get().then(function (snapshot) {\n        snapshot.docs.forEach(function (doc) {\n          _this4.respostasBase.push(doc.data().answers);\n\n          _this4.perguntas.push(doc.data().question);\n        });\n      });\n    },\n    copiar: function copiar() {\n      var _this5 = this;\n\n      this.$copyText(this.urlCopy).then(function () {\n        _this5.urlCopy = \"URL Copiada!\";\n      }, function () {\n        this.urlCopy = \"Erro\";\n      });\n    }\n  }\n};",{"version":3,"sources":["Quiz2.vue"],"names":[],"mappings":"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","sourcesContent":["<!--suppress SpellCheckingInspection, JSUnusedGlobalSymbols -->\n<template>\n    <div class=\"home\">\n        <div v-if=\"!this.leaderboard\">\n            <div class=\"space\"></div>\n            <span class=\"counter\">{{ respostasCorretas.length + 1}} / {{questions.length}}</span>\n            <h1>{{questions[choose]}}</h1>\n            <div class=\"question-list\">\n\n                <ul>\n                    <li v-for=\"(answer, index) in answers[respostas.length - 1]\" :key=\"index\">\n                        <div v-if=\"this.respondido\">\n                            <div v-if=\"index === respostasCorretas[respostas.length - 1]\" style=\"color: green;\">{{answer}}</div>\n                            <div v-else style=\"color: red;\">{{answer}}</div>\n                        </div>\n                        <div v-else v-on:click=\"chooseAnswer(index)\">{{answer}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div v-else>\n            <h1>Quiz do(a) {{ name }}</h1>\n            <div v-if=\"this.percentagem === -1\">\n                <p>Partilha o link com os teus amigos:</p>\n                <div class=\"social-share\">\n\n                    <p class=\"url\">{{urlCopy}}</p>\n                    <button v-on:click=\"copy()\">Copiar</button>\n\n                </div>\n            </div>\n            <div v-else>\n                <h2>Resultado: {{percentagem}}%</h2>\n                <p>Acertaste {{percentagem / 10}} / {{perguntas.length}} questões</p>\n\n                <button v-on:click=\"this.$router.push('/createquiz/')\">Criar Quiz</button>\n            </div>\n\n            <h1>Leaderboard</h1>\n\n\n            <table style=\"width:100%\">\n                <tr>\n                    <th>Nome</th>\n                    <th>Pontuação</th>\n                </tr>\n                <tr v-for=\"(lead, index) in leaderboardJogadores\" :key=\"index\">\n                    <td>{{lead['name']}}</td>\n                    <td>{{ lead['percentage'] }}%</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import firebase,{ firestore } from 'firebase'\n    import { setTimeout } from 'timers';\n\n    const usersCollection = firebase.firestore().collection(\"users\");\n    const quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n    const questionsCollection = firebase.firestore().collection(\"questions\");\n\n    export default {\n        name: 'Quiz2',\n\n        data() {\n            return {\n                perguntas: [],\n                respostasCorretas: [],\n                respostasBase: [],\n                respostas: [],\n\n                leaderboardJogadores: [],\n\n                criadorQuiz: null,\n                jogadorQuiz: null,\n\n                percentagem: -1,\n\n                urlCopy: 'https://aboutme.se3me.com/quiz/' + this.$route.params.quizUrl,\n                criadorDoc: '',\n\n                respondido: false,\n                leaderboard: false,\n\n            }\n\n        },\n\n        /*\n            - Verificar se está logado\n            - Verificar se o utilizador corrente é igual ao utilizador que criou o quiz\n                - Enviar para a leaderboard\n            - Senão\n                - Verificar se o utilizador corrente já respondeu ao quiz\n                    - Enviar para leaderboard\n                - Senão\n                    - Iniciar o jogo\n         */\n        mounted() {\n\n            // Definimos a variável carregado como false para definirmos que a página não deverá ser carregada\n            this.carregado = false;\n\n            if(!this.$router.params.quizUrl) {\n                this.$router.push('/');\n            }\n\n            // Caso o utilizador não esteja logado\n            if(!this.$store.getters.getUser()) {\n                this.$router.push('/login/');\n            }\n\n            this.jogadorQuiz = this.$store.getters.getUser();\n\n            usersCollection.where(\"uid\", \"==\", this.jogadorQuiz.uid).get().then((snapshot) => {\n\n               if(this.$router.params.quizUrl ===  snapshot.docs[0].id) {\n                   this.mostrarLeaderboard(true, null);\n\n               } else {\n\n                    quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((snapshot) => {\n\n                        let quemRespondeu = snapshot.docs[0].data().otherAnswers;\n                        this.leaderboardJogadores = quemRespondeu;\n                        this.criadorDoc = snapshot.docs[0].id;\n\n                        usersCollection.doc(this.$route.params.quizUrl).get().then((query) => {\n                            this.criadorQuiz = query.data().name\n                        });\n\n                        for(let i = 0; i < quemRespondeu.length; i++) {\n\n                            // Caso o utilizador corrente já tenha respondido ao quiz\n                            if(quemRespondeu[i][\"user\"] === this.jogadorQuiz.uid) {\n                                this.mostrarLeaderboard(false, i);\n                                return;\n                            }\n                        }\n                    });\n\n                   }\n\n            });\n\n            // Recebe as respostas corretas\n            this.receberPerguntasERespostas();\n            this.carregado = true;\n\n\n        },\n\n        methods: {\n\n            /**\n             * Exibe a leaderboard\n             * @param isCreator\n             * @param user\n             */\n            mostrarLeaderboard(isCreator, user) {\n\n                if(!isCreator || !user) {\n                    this.percentagem = this.leaderboardJogadores[user][\"percentage\"];\n                }\n\n                this.leaderboard = true;\n                this.carregado = true;\n\n            },\n\n            /**\n             * Função que responde à pergunta atual.\n             * Caso seja detetado que o Quiz terminou, é chamado o procedimento terminarQuiz.\n             * @param resposta\n             */\n            responderPergunta(resposta) {\n\n                this.respondido = true;\n\n                setTimeout(() => {\n                    this.reposta.push(resposta);\n                    this.respondido = false;\n                }, 3 * 1000);\n\n                if(this.respostas.length === this.respostasCorretas.length) {\n                    this.terminarQuiz();\n                }\n\n            },\n\n            /**\n             * Procedimento para terminar o Quiz\n             * Os dados são guardados na base de dados\n             */\n            terminarQuiz() {\n\n                this.calcularPercentagem();\n\n                quemSabeMais.doc(this.criadorDoc).update({\n\n                    otherAnswers : firestore.FieldValue.arrayUnion({\n                        \"user\" : this.jogadorQuiz.uid,\n                        \"percentage\" : this.percentagem\n                    }),\n\n                    leaderboardPontuation : firestore.FieldValue.arrayUnion(\n                        {\n                            \"name\" : this.jogadorQuiz.name,\n                            \"percentage\" : this.percentagem\n                        }\n                    ),\n\n                }).then(() => {\n                    this.mostrarLeaderboard(false, null)\n                })\n\n            },\n\n            /**\n             * Calcula a percentagem de respostas corretas\n             */\n            calcularPercentagem() {\n\n                let percentagem = 0;\n\n                for(let i = 0; i < this.respostasCorretas.length; i++) {\n\n                    if(this.respostas[i] === this.respostasCorretas[i]) {\n                        percentagem += 10\n                    }\n\n                }\n\n                this.percentagem = percentagem;\n\n            },\n\n            /**\n             * Recebe as perguntas e as respostas do Quiz\n             */\n            receberPerguntasERespostas() {\n\n                questionsCollection.get().then((snapshot) => {\n\n                    snapshot.docs.forEach((doc) => {\n                        this.respostasBase.push(doc.data().answers);\n                        this.perguntas.push(doc.data().question)\n                    })\n\n                });\n\n            },\n\n            copiar() {\n\n                this.$copyText(this.urlCopy).then(() => {\n\n                    this.urlCopy = \"URL Copiada!\"\n\n                }, function () {\n                    this.urlCopy = \"Erro\"\n                })\n            }\n\n\n\n        }\n    }\n</script>\n\n\n<style scoped src=\"./quiz.css\"></style>"],"sourceRoot":"src/views"}]}