{"remainingRequest":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js!/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vascomartins/Documents/Dev/aboutme/src/views/Quiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vascomartins/Documents/Dev/aboutme/src/views/Quiz.vue","mtime":1554233715758},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase, { firestore } from 'firebase';\nimport login from './Login.vue';\nimport { setTimeout } from 'timers';\nexport default {\n  name: 'quiz',\n  components: {\n    login: login\n  },\n  data: function data() {\n    return {\n      loggedIn: false,\n      leaderboard: false,\n      isCreating: false,\n      hasAnswered: false,\n      show: false,\n      loaded: false,\n      questionNumber: 1,\n      quizId: null,\n      userId: null,\n      choose: 0,\n      index: 0,\n      percentage: 0,\n      correct: 0,\n      questions: [],\n      answers: [],\n      correctAnswers: [],\n      choosen: [],\n      leader: [],\n      currentName: '',\n      name: '',\n      urlCopy: 'http://se3me.com/quiz/' + this.$route.params.quizUrl,\n      url: this.$route.params.quizUrl\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    console.log(\"mounted\");\n    this.loaded = true;\n    this.getQuestionsAndAnswers();\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        firebase.firestore().collection(\"users\").where(\"uid\", \"==\", user.uid).get().then(function (query) {\n          if (!(_this.$route.params.quizUrl === query.docs[0].id)) {\n            if (_this.$route.params.quizUrl) {\n              var quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n              quemSabeMais.where(\"doc\", \"==\", _this.$route.params.quizUrl).get().then(function (snapshot) {\n                _this.correctAnswers = snapshot.docs[0].data().correctAnswers;\n                var whoAnswered = snapshot.docs[0].data().otherAnswers;\n\n                for (var i = 0; i < whoAnswered.length; i++) {\n                  if (whoAnswered[i][\"user\"] === firebase.auth().currentUser.uid) {\n                    _this.leaderboard = true;\n                    _this.percentage = whoAnswered[i][\"percentage\"];\n                    _this.correct = _this.percentage / 10;\n                    _this.hasAnswered = true;\n\n                    _this.getLeaderboard();\n                  }\n                }\n\n                firebase.firestore().collection(\"users\").doc(_this.$route.params.quizUrl).get().then(function (query) {\n                  _this.name = query.data().name;\n                });\n              });\n            }\n          } else {\n            firebase.firestore().collection(\"users\").doc(_this.$route.params.quizUrl).get().then(function (query) {\n              _this.name = query.data().name;\n            });\n          } // In case the user has already a quiz\n\n\n          if (query.docs[0].data().hasQuiz) {\n            //If there's no quiz ID in the url, the user will be redirected to \n            //their quiz URL\n            if (!_this.$route.params.quizUrl) {\n              _this.$router.push('/quiz/' + query.docs[0].id);\n\n              _this.leaderboard = true;\n              location.reload();\n            } else {\n              //If there's a Quiz Id and it's equal to the current user's id\n              if (_this.$route.params.quizUrl === query.docs[0].id) {\n                _this.leaderboard = true;\n\n                _this.getLeaderboard();\n              }\n            }\n          } else {\n            if (!_this.$route.params.quizUrl) {\n              _this.quizId = query.docs[0].id;\n              _this.isCreating = true;\n              console.log(\"creating\");\n            }\n          }\n\n          _this.currentName = query.docs[0].data().name;\n        });\n\n        _this.toggleLoggedIn();\n      }\n    });\n  },\n  methods: {\n    openCreator: function openCreator() {\n      this.$router.push(\"/quiz/\");\n      location.reload();\n    },\n    copy: function copy() {\n      var _this2 = this;\n\n      this.$copyText('http://se3me.com/quiz/' + this.url).then(function (e) {\n        _this2.urlCopy = \"URL Copiada!\";\n      }, function (e) {\n        this.urlCopy = \"Erro\";\n      });\n    },\n    getLeaderboard: function getLeaderboard() {\n      var _this3 = this;\n\n      var quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n      quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then(function (snapshot) {\n        _this3.leader = snapshot.docs[0].data().leaderboardPontuation;\n        _this3.leader = _this3.leader.sort();\n      });\n    },\n    chooseAnswer: function chooseAnswer(index) {\n      var _this4 = this;\n\n      this.choosen.push(index);\n\n      if (this.choose + 1 === this.questions.length) {\n        if (this.isCreating) {\n          firebase.firestore().collection(\"quemSabeMais\").add({\n            userId: firebase.auth().currentUser.uid,\n            doc: this.quizId,\n            correctAnswers: this.choosen,\n            otherAnswers: [],\n            leaderboardPontuation: []\n          }).then(function (snapshot) {\n            _this4.$router.push('/quiz/' + _this4.quizId);\n\n            _this4.leaderboard = true;\n            _this4.urlCopy = 'http://se3me.com/quiz/' + _this4.quizId;\n            firebase.firestore().collection(\"users\").doc(_this4.quizId).update({\n              hasQuiz: true\n            }).catch(function (e) {\n              console.log(e);\n            });\n            location.reload();\n          });\n        } else {\n          this.show = true;\n          var count = 0;\n\n          for (var i = 0; i < this.correctAnswers.length; i++) {\n            if (this.choosen[i] === this.correctAnswers[i]) {\n              count += 1;\n            }\n          }\n\n          var percentage = count * 100 / this.correctAnswers.length;\n          var uid = firebase.auth().currentUser.uid;\n          var quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n          quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then(function (query) {\n            quemSabeMais.doc(query.docs[0].id).update({\n              otherAnswers: [{\n                \"user\": uid,\n                \"percentage\": percentage\n              }],\n              leaderboardPontuation: [{\n                \"name\": _this4.currentName,\n                \"percentage\": percentage\n              }]\n            }).then(function (query) {\n              _this4.leaderboard = true;\n              _this4.percentage = percentage;\n              _this4.hasAnswered = true;\n              _this4.correct = count;\n              location.reload();\n            });\n          });\n        }\n      } else {\n        if (!this.isCreating) {\n          this.show = true;\n          setTimeout(function () {\n            _this4.show = false;\n            _this4.choose += 1;\n          }, 1.5 * 1000);\n        } else {\n          this.choose += 1;\n        }\n      }\n    },\n    toggleLoggedIn: function toggleLoggedIn() {\n      this.loggedIn = !this.loggedIn;\n    },\n    getQuestionsAndAnswers: function getQuestionsAndAnswers() {\n      var _this5 = this;\n\n      firebase.firestore().collection(\"questions\").get().then(function (snapshot) {\n        snapshot.docs.forEach(function (doc) {\n          _this5.answers.push(doc.data().answers);\n\n          _this5.questions.push(doc.data().question);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Quiz.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div v-if=\"this.loaded\" class=\"home\">\n\n  <div v-if=\"!this.loggedIn\">\n    <login></login>\n  </div>\n   <div v-else>\n       <div v-if=\"!this.leaderboard\">\n        <div class=\"space\"></div>\n            <span class=\"counter\">{{ choose + 1}} / {{questions.length}}</span>\n            <h1>{{questions[choose]}}</h1>\n            <div class=\"question-list\">\n\n                <ul>\n                    <li v-for=\"(answer, index) in answers[choose]\" :key=\"index\">\n                        <div v-if=\"show\">\n                            <div v-if=\"index === correctAnswers[choose]\" style=\"color: green;\">{{answer}}</div>\n                            <div v-else style=\"color: red;\">{{answer}}</div>\n                        </div>\n                        <div v-else v-on:click=\"chooseAnswer(index)\">{{answer}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div v-else>\n            <h1>Quiz do(a) {{ name }}</h1>\n            <div v-if=\"!this.hasAnswered\">\n            <p>Partilha o link com os teus amigos:</p>\n            <div class=\"social-share\">\n                \n                <p class=\"url\">{{urlCopy}}</p>\n                <button v-on:click=\"copy()\">Copiar</button>\n                 \n            </div>\n            </div>\n            <div v-else>\n                <h2>Resultado: {{percentage}}%</h2>\n                <p>Acertaste {{correct}} / {{questions.length}} questões</p>\n\n                <button v-on:click=\"openCreator()\">Criar Quiz</button>\n            </div>\n\n            <h1>Leaderboard</h1>\n\n\n            <table style=\"width:100%\">\n                <tr>\n                    <th>Nome</th>\n                    <th>Pontuação</th> \n                </tr>\n                <div v-if=\"this.leader != []\">\n                <tr v-for=\"(lead, index) in leader\" :key=\"index\">\n                    <td>{{lead['name']}}</td>\n                    <td>{{ lead['percentage'] }}%</td>\n                </tr>\n                </div>\n                <div v-else>\n                    Ainda ninguém respondeu ao Quiz\n                </div>\n            </table>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\n\nimport firebase,{ firestore } from 'firebase'\nimport login from './Login.vue'\nimport { setTimeout } from 'timers';\n\nexport default {\n  name: 'quiz',\n\n  components: {\n      login,\n  },\n\n  data() {\n      return {\n          loggedIn: false,\n          leaderboard: false,\n          isCreating: false,\n          hasAnswered: false,\n          show: false,\n          loaded: false,\n\n          questionNumber: 1,\n          quizId: null,\n          userId: null,\n          choose: 0,\n          index: 0,\n          percentage: 0,\n          correct: 0,\n\n          questions: [],\n          answers: [],\n          correctAnswers: [],\n          choosen: [],\n          leader: [],\n\n          currentName: '',\n          name: '',\n          urlCopy: 'http://se3me.com/quiz/' + this.$route.params.quizUrl,\n          url: this.$route.params.quizUrl\n      }\n  },\n\n   mounted() {\n       console.log(\"mounted\")\n       this.loaded = true\n     this.getQuestionsAndAnswers()\n     \n     firebase.auth().onAuthStateChanged((user) => {\n         if(user) {\n\n            firebase.firestore().collection(\"users\").where(\"uid\", \"==\", user.uid).get().then((query) => {\n                \n                if(!(this.$route.params.quizUrl === query.docs[0].id)) {\n                            \n                           if(this.$route.params.quizUrl) {\n                           \n                            const quemSabeMais = firebase.firestore().collection(\"quemSabeMais\")\n\n                            quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((snapshot) => {\n                                this.correctAnswers = snapshot.docs[0].data().correctAnswers\n\n                                var whoAnswered = snapshot.docs[0].data().otherAnswers\n\n                                for(var i = 0; i < whoAnswered.length; i++) {\n                                    if(whoAnswered[i][\"user\"] === firebase.auth().currentUser.uid) {\n                                        this.leaderboard = true\n                                        this.percentage = whoAnswered[i][\"percentage\"]\n                                        this.correct = this.percentage / 10\n                                        this.hasAnswered = true\n                                        this.getLeaderboard()\n                                    }\n                                }\n                                \n                                firebase.firestore().collection(\"users\").doc(this.$route.params.quizUrl).get().then((query) => {\n                                    this.name = query.data().name\n                                })\n                            })\n                           }\n                     } else {\n                          firebase.firestore().collection(\"users\").doc(this.$route.params.quizUrl).get().then((query) => {\n                                    this.name = query.data().name\n                                })\n                     }\n\n                // In case the user has already a quiz\n                if(query.docs[0].data().hasQuiz) {\n                    //If there's no quiz ID in the url, the user will be redirected to \n                    //their quiz URL\n                    if(!this.$route.params.quizUrl) {\n                        this.$router.push('/quiz/' + query.docs[0].id)\n                        this.leaderboard = true\n                        location.reload()\n                    } else {\n                        //If there's a Quiz Id and it's equal to the current user's id\n                        if(this.$route.params.quizUrl === query.docs[0].id) {\n                            this.leaderboard = true\n                            this.getLeaderboard()\n                        } \n                    }\n                } else {\n                    if(!this.$route.params.quizUrl) {\n                        this.quizId = query.docs[0].id\n                        this.isCreating = true\n                        console.log(\"creating\")\n                    }\n                }\n\n                this.currentName = query.docs[0].data().name\n\n            })\n\n             this.toggleLoggedIn()\n         }\n     });\n\n  },\n\n    methods: {\n        openCreator: function() {\n            this.$router.push(\"/quiz/\")\n            location.reload()\n        },\n        copy: function() {\n        this.$copyText('http://se3me.com/quiz/' + this.url).then((e) => {\n\n            this.urlCopy = \"URL Copiada!\"\n            \n            }, function (e) {\n            this.urlCopy = \"Erro\"\n        })\n    \n        },\n\n        getLeaderboard: function() {\n            \n                const quemSabeMais = firebase.firestore().collection(\"quemSabeMais\")\n\n                quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((snapshot) => {\n                    this.leader = snapshot.docs[0].data().leaderboardPontuation\n                    this.leader = this.leader.sort()\n                })\n        },\n        chooseAnswer: function(index) {\n\n            this.choosen.push(index)\n\n            if(this.choose + 1 === this.questions.length) {\n\n                    if(this.isCreating) {\n                    firebase.firestore().collection(\"quemSabeMais\").add({\n\n                        userId: firebase.auth().currentUser.uid,\n                        doc: this.quizId,\n                        correctAnswers: this.choosen,\n                        otherAnswers: [],\n                        leaderboardPontuation: [],\n\n                    }).then((snapshot) => {\n\n                        this.$router.push('/quiz/' + this.quizId)\n                        this.leaderboard = true\n                        this.urlCopy = 'http://se3me.com/quiz/' + this.quizId\n\n                        firebase.firestore().collection(\"users\").doc(this.quizId).update({\n\n                            hasQuiz: true\n\n                        }).catch((e) => {\n                            console.log(e)\n                        })\n            location.reload()\n                    })\n                } else {\n\n                        this.show = true\n                        var count = 0\n                        for (var i = 0; i < this.correctAnswers.length; i++) {\n                            if(this.choosen[i] === this.correctAnswers[i]) {\n                                count += 1\n                            }\n                        }\n\n                        var percentage = (count * 100) / this.correctAnswers.length\n                        var uid = firebase.auth().currentUser.uid\n                    \n\n                         const quemSabeMais = firebase.firestore().collection(\"quemSabeMais\")\n                        \n                        quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((query) => {\n                \n                            quemSabeMais.doc(query.docs[0].id).update({\n\n                                otherAnswers : [\n                                    {\n                                        \"user\" : uid,\n                                        \"percentage\" : percentage\n                                    }\n                                ],\n\n                                leaderboardPontuation : [\n                                    {\n                                        \"name\" : this.currentName,\n                                        \"percentage\" : percentage\n                                    }\n                                ],\n\n\n                            }).then((query) => {\n\n                                this.leaderboard = true\n                                this.percentage = percentage\n                                this.hasAnswered = true\n                                this.correct = count\n                                location.reload()\n                            })\n                        })\n\n\n                     \n\n                }\n                \n\n            } else {\n                \n                if(!this.isCreating) {\n                    this.show = true\n                    setTimeout(() => {\n                        this.show = false\n                    this.choose += 1\n                    }, 1.5 * 1000)\n                } else {\n                this.choose += 1\n                }\n\n            }\n        },\n        toggleLoggedIn: function() {\n\n            this.loggedIn = !this.loggedIn\n\n        },\n\n        getQuestionsAndAnswers: function() {\n\n            firebase.firestore().collection(\"questions\").get().then((snapshot) => {\n\n                snapshot.docs.forEach((doc) => {\n\n                    this.answers.push( doc.data().answers)\n                    this.questions.push(doc.data().question)\n\n                })\n            })\n        }\n    },\n\n \n  \n\n}\n</script>\n\n<style scoped>\n\n  .home {\n    display: flex;\n    flex-direction: center;\n    text-align: center;\n    padding: 10px;\n  }\n  .home h1 {\n    color: #00A9B1;\n    font-size: 37px;\n  }\n\n  .space {\n      height: 30px;\n  }\n\n  .counter {\n      margin: 10px;\n      color: white;\n      background: #00A9B1;\n      padding: 10px;\n      font-size: 26px;\n      border-radius: 20px;\n  }\n\n\n  .input {\n      margin-top: 50px;\n      height: 70px;\n      width: 90%;\n      border-radius: 30px;\n      border: 2px solid black;\n      padding-left: 30px;\n      font-size: 24px;\n      color: rgb(87, 87, 87);\n      transition: all 0.3s;\n  }\n\n  .social-share .url {\n      border: 1px solid black;\n      border-radius: 50px;\n      padding-top: 20px;\n      padding-bottom: 20px;\n      padding-left: 5px;\n      padding-right: 5px;\n      width: 150%;\n      font-size: 13px;\n  }\n\n  input:focus {\n      border: 2px solid #00A9B1;\n  }\n\n  *:focus {\n      outline: none;\n  }\n\n    ul {\n        border: 1px solid black;\n        border-radius: 30px;\n        padding: 0;\n        width: 100%;\n    }\n\n  ul li {\n      list-style: none;\n      border-bottom: 1px solid black;\n      cursor:pointer;\n      margin: 0;\n      font-size: 42px;\n      padding: 10px;\n  }\n\n  ul li div {\n      width: 100%;\n      height: 100%;\n      padding: 5px;\n      margin: 0;\n  }\n\n  ul li:hover {\n      color: rgb(116, 179, 22);\n  }\n\n    ul li:last-child {\n        border-bottom: none;\n    }\n\n \n\n  button {\n    margin-top: 10px;\n    width: 150px;\n    height: 60px;\n    background: #2db81a;\n    border: none;\n    border-radius: 40px;\n    color: white;\n    font-weight: 400;\n    font-size: 30px;\n    cursor: pointer;\n    -webkit-box-shadow: 4px 3px 40px -16px rgba(0,0,0,0.75);\n    -moz-box-shadow: 4px 3px 40px -16px rgba(0,0,0,0.75);\n    box-shadow: 4px 3px 40px -16px rgba(0,0,0,0.75);\n\n  }\n</style>\n\n"],"sourceRoot":"src/views"}]}