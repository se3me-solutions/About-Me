{"remainingRequest":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vascomartins/Documents/Dev/aboutme/src/views/QuizSnd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vascomartins/Documents/Dev/aboutme/src/views/QuizSnd.vue","mtime":1554592083575},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport firebase from 'firebase'\nimport { setTimeout } from 'timers';\n\nlet usersCollection = null;\nlet quemSabeMais = null;\n\nexport default {\n    name: 'QuizSnc',\n\n    data() {\n        return {\n            perguntas: [],\n            respostasCorretas: [],\n            respostasBase: [],\n            respostas: [],\n\n            leaderboardJogadores: [],\n\n            criadorQuiz: null,\n            jogadorQuiz: null,\n\n            percentagem: -1,\n\n            urlCopy: 'https://aboutme.se3me.com/quiz/' + this.$route.params.quizUrl,\n            criadorDoc: '',\n\n            respondido: false,\n            leaderboard: false,\n            carregado: false,\n\n        }\n\n    },\n\n    beforeMount() {\n        usersCollection = firebase.firestore().collection(\"users\");\n        quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n        //questionsCollection = firebase.firestore().collection(\"questions\");\n    },\n\n    /*\n        - Verificar se está logado\n        - Verificar se o utilizador corrente é igual ao utilizador que criou o quiz\n            - Enviar para a leaderboard\n        - Senão\n            - Verificar se o utilizador corrente já respondeu ao quiz\n                - Enviar para leaderboard\n            - Senão\n                - Iniciar o jogo\n     */\n    mounted() {\n\n        // Definimos a variável carregado como false para definirmos que a página não deverá ser carregada\n        this.carregado = false;\n\n        if(!this.$route.params.quizUrl) {\n            this.$router.push('/');\n            return;\n        }\n\n        // Caso o utilizador não esteja logado\n\n        firebase.auth().onAuthStateChanged((user) => {\n\n            if(!user) {\n                this.$router.push('/login/');\n            } else {\n\n                usersCollection.where(\"uid\", \"==\", user.uid).get().then((snapshot) => {\n\n                    this.jogadorQuiz = snapshot.docs[0].data();\n\n\n                    quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((query) => {\n\n                        usersCollection.doc(this.$route.params.quizUrl).get().then((querySnap) => {\n                            this.criadorQuiz = querySnap.data().name\n                        });\n\n\n                        let quemRespondeu = query.docs[0].data().leaderboardPontuation;\n                        this.leaderboardJogadores = quemRespondeu;\n                        this.criadorDoc = query.docs[0].id;\n                        this.respostasCorretas = query.docs[0].data().correctAnswers;\n\n                        if (this.$route.params.quizUrl === snapshot.docs[0].id) {\n                            this.mostrarLeaderboard(true, null);\n\n                        } else {\n\n\n                            for (let i = 0; i < quemRespondeu.length; i++) {\n\n                                // Caso o utilizador corrente já tenha respondido ao quiz\n                                if (query.docs[0].data().otherAnswers[i][\"user\"] === user.uid) {\n                                    this.mostrarLeaderboard(false, i);\n                                    return;\n                                }\n                            }\n                        }\n                    });\n\n                });\n            }\n            // Recebe as respostas corretas\n            this.receberPerguntasERespostas();\n            this.carregado = true;\n\n        });\n\n\n\n    },\n\n    methods: {\n\n        createQuiz() {\n          this.$router.push('/createquiz/')\n        },\n\n        /**\n         * Exibe a leaderboard\n         * @param isCreator\n         * @param user\n         */\n        mostrarLeaderboard(isCreator, user) {\n\n            if(!isCreator && user) {\n                this.percentagem = this.leaderboardJogadores[user][\"percentage\"];\n            }\n\n            this.leaderboard = true;\n            this.carregado = true;\n\n        },\n\n        /**\n         * Função que responde à pergunta atual.\n         * Caso seja detetado que o Quiz terminou, é chamado o procedimento terminarQuiz.\n         * @param resposta\n         */\n        responderPergunta(resposta) {\n\n            this.respondido = true;\n\n            setTimeout(() => {\n                this.respostas.push(resposta);\n                this.respondido = false;\n            }, 1.5 * 1000);\n            if(this.respostas.length + 1 === this.respostasCorretas.length) {\n                this.terminarQuiz();\n            }\n\n        },\n\n        /**\n         * Procedimento para terminar o Quiz\n         * Os dados são guardados na base de dados\n         */\n        terminarQuiz() {\n\n            this.calcularPercentagem();\n\n\n            quemSabeMais.doc(this.criadorDoc).update({\n\n                otherAnswers : firebase.firestore.FieldValue.arrayUnion({\n                    \"user\" : this.jogadorQuiz.uid,\n                    \"percentage\" : this.percentagem\n                }),\n\n                leaderboardPontuation : firebase.firestore.FieldValue.arrayUnion(\n                    {\n                        \"name\" : this.jogadorQuiz.name,\n                        \"percentage\" : this.percentagem\n                    }\n                ),\n\n            }).then(() => {\n                this.mostrarLeaderboard(false, null)\n            })\n\n        },\n\n        /**\n         * Calcula a percentagem de respostas corretas\n         */\n        calcularPercentagem() {\n\n            let percentagem = 0;\n\n            for(let i = 0; i <= this.respostasCorretas.length; i++) {\n\n                if(this.respostas[i] === this.respostasCorretas[i]) {\n                    percentagem += 10\n                }\n\n            }\n\n            this.percentagem = percentagem;\n\n        },\n\n        /**\n         * Recebe as perguntas e as respostas do Quiz\n         */\n        receberPerguntasERespostas() {\n\n            firebase.firestore().collection(\"questions\").get().then((snapshot) => {\n\n                snapshot.docs.forEach((doc) => {\n                    this.respostasBase.push(doc.data().answers);\n                    this.perguntas.push(doc.data().question)\n                })\n\n            });\n\n        },\n\n        copiar() {\n\n            this.$copyText(this.urlCopy).then(() => {\n\n                this.urlCopy = \"URL Copiada!\"\n\n            }, function () {\n                this.urlCopy = \"Erro\"\n            })\n        }\n\n\n\n    }\n}\n",{"version":3,"sources":["QuizSnd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA","file":"QuizSnd.vue","sourceRoot":"views","sourcesContent":["<!--suppress SpellCheckingInspection, JSUnusedGlobalSymbols -->\n<template>\n    <div class=\"home\" v-if=\"carregado\">\n        <div v-if=\"!this.leaderboard\">\n            <h1>Quiz do(a) {{ criadorQuiz }}</h1>\n            <div class=\"space\"></div>\n            <span class=\"counter\">{{ respostas.length + 1}} / {{perguntas.length}}</span>\n            <h1>{{perguntas[respostas.length]}}</h1>\n            <div class=\"question-list\">\n\n                <ul>\n                    <li v-for=\"(answer, index) in respostasBase[respostas.length]\" :key=\"index\">\n                        <div v-if=\"respondido\">\n                            <div v-if=\"index === respostasCorretas[respostas.length]\" style=\"color: green;\">{{answer}}</div>\n                            <div v-else style=\"color: red;\">{{answer}}</div>\n                        </div>\n                        <div v-else v-on:click=\"responderPergunta(index)\">{{answer}}</div>\n                    </li>\n                </ul>\n            </div>\n            <button style=\"width: 200px;\" v-on:click=\"mostrarLeaderboard(false, null)\">Leaderboard</button>\n        </div>\n\n        <div v-else>\n            <h1>Quiz do(a) {{ criadorQuiz }}</h1>\n            <div v-if=\"percentagem === -1\">\n                <p>Partilha o link com os teus amigos:</p>\n                <div class=\"social-share\">\n\n                    <p class=\"url\">{{urlCopy}}</p>\n                    <button v-on:click=\"copiar()\">Copiar</button>\n\n                </div>\n            </div>\n            <div v-else>\n                <h2>Resultado: {{percentagem}}%</h2>\n                <p>Acertaste {{percentagem / 10}} / {{perguntas.length}} questões</p>\n\n                <button style=\"width: 150px;\" v-on:click=\"createQuiz()\">Criar Quiz</button>\n            </div>\n\n            <h1>Leaderboard</h1>\n\n\n            <table style=\"width:100%\">\n                <tr>\n                    <th>Nome</th>\n                    <th>Pontuação</th>\n                </tr>\n                <tr v-for=\"(lead, index) in leaderboardJogadores\" :key=\"index\">\n                    <td>{{lead['name']}}</td>\n                    <td>{{ lead['percentage'] }}%</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import firebase from 'firebase'\n    import { setTimeout } from 'timers';\n\n    let usersCollection = null;\n    let quemSabeMais = null;\n\n    export default {\n        name: 'QuizSnc',\n\n        data() {\n            return {\n                perguntas: [],\n                respostasCorretas: [],\n                respostasBase: [],\n                respostas: [],\n\n                leaderboardJogadores: [],\n\n                criadorQuiz: null,\n                jogadorQuiz: null,\n\n                percentagem: -1,\n\n                urlCopy: 'https://aboutme.se3me.com/quiz/' + this.$route.params.quizUrl,\n                criadorDoc: '',\n\n                respondido: false,\n                leaderboard: false,\n                carregado: false,\n\n            }\n\n        },\n\n        beforeMount() {\n            usersCollection = firebase.firestore().collection(\"users\");\n            quemSabeMais = firebase.firestore().collection(\"quemSabeMais\");\n            //questionsCollection = firebase.firestore().collection(\"questions\");\n        },\n\n        /*\n            - Verificar se está logado\n            - Verificar se o utilizador corrente é igual ao utilizador que criou o quiz\n                - Enviar para a leaderboard\n            - Senão\n                - Verificar se o utilizador corrente já respondeu ao quiz\n                    - Enviar para leaderboard\n                - Senão\n                    - Iniciar o jogo\n         */\n        mounted() {\n\n            // Definimos a variável carregado como false para definirmos que a página não deverá ser carregada\n            this.carregado = false;\n\n            if(!this.$route.params.quizUrl) {\n                this.$router.push('/');\n                return;\n            }\n\n            // Caso o utilizador não esteja logado\n\n            firebase.auth().onAuthStateChanged((user) => {\n\n                if(!user) {\n                    this.$router.push('/login/');\n                } else {\n\n                    usersCollection.where(\"uid\", \"==\", user.uid).get().then((snapshot) => {\n\n                        this.jogadorQuiz = snapshot.docs[0].data();\n\n\n                        quemSabeMais.where(\"doc\", \"==\", this.$route.params.quizUrl).get().then((query) => {\n\n                            usersCollection.doc(this.$route.params.quizUrl).get().then((querySnap) => {\n                                this.criadorQuiz = querySnap.data().name\n                            });\n\n\n                            let quemRespondeu = query.docs[0].data().leaderboardPontuation;\n                            this.leaderboardJogadores = quemRespondeu;\n                            this.criadorDoc = query.docs[0].id;\n                            this.respostasCorretas = query.docs[0].data().correctAnswers;\n\n                            if (this.$route.params.quizUrl === snapshot.docs[0].id) {\n                                this.mostrarLeaderboard(true, null);\n\n                            } else {\n\n\n                                for (let i = 0; i < quemRespondeu.length; i++) {\n\n                                    // Caso o utilizador corrente já tenha respondido ao quiz\n                                    if (query.docs[0].data().otherAnswers[i][\"user\"] === user.uid) {\n                                        this.mostrarLeaderboard(false, i);\n                                        return;\n                                    }\n                                }\n                            }\n                        });\n\n                    });\n                }\n                // Recebe as respostas corretas\n                this.receberPerguntasERespostas();\n                this.carregado = true;\n\n            });\n\n\n\n        },\n\n        methods: {\n\n            createQuiz() {\n              this.$router.push('/createquiz/')\n            },\n\n            /**\n             * Exibe a leaderboard\n             * @param isCreator\n             * @param user\n             */\n            mostrarLeaderboard(isCreator, user) {\n\n                if(!isCreator && user) {\n                    this.percentagem = this.leaderboardJogadores[user][\"percentage\"];\n                }\n\n                this.leaderboard = true;\n                this.carregado = true;\n\n            },\n\n            /**\n             * Função que responde à pergunta atual.\n             * Caso seja detetado que o Quiz terminou, é chamado o procedimento terminarQuiz.\n             * @param resposta\n             */\n            responderPergunta(resposta) {\n\n                this.respondido = true;\n\n                setTimeout(() => {\n                    this.respostas.push(resposta);\n                    this.respondido = false;\n                }, 1.5 * 1000);\n                if(this.respostas.length + 1 === this.respostasCorretas.length) {\n                    this.terminarQuiz();\n                }\n\n            },\n\n            /**\n             * Procedimento para terminar o Quiz\n             * Os dados são guardados na base de dados\n             */\n            terminarQuiz() {\n\n                this.calcularPercentagem();\n\n\n                quemSabeMais.doc(this.criadorDoc).update({\n\n                    otherAnswers : firebase.firestore.FieldValue.arrayUnion({\n                        \"user\" : this.jogadorQuiz.uid,\n                        \"percentage\" : this.percentagem\n                    }),\n\n                    leaderboardPontuation : firebase.firestore.FieldValue.arrayUnion(\n                        {\n                            \"name\" : this.jogadorQuiz.name,\n                            \"percentage\" : this.percentagem\n                        }\n                    ),\n\n                }).then(() => {\n                    this.mostrarLeaderboard(false, null)\n                })\n\n            },\n\n            /**\n             * Calcula a percentagem de respostas corretas\n             */\n            calcularPercentagem() {\n\n                let percentagem = 0;\n\n                for(let i = 0; i <= this.respostasCorretas.length; i++) {\n\n                    if(this.respostas[i] === this.respostasCorretas[i]) {\n                        percentagem += 10\n                    }\n\n                }\n\n                this.percentagem = percentagem;\n\n            },\n\n            /**\n             * Recebe as perguntas e as respostas do Quiz\n             */\n            receberPerguntasERespostas() {\n\n                firebase.firestore().collection(\"questions\").get().then((snapshot) => {\n\n                    snapshot.docs.forEach((doc) => {\n                        this.respostasBase.push(doc.data().answers);\n                        this.perguntas.push(doc.data().question)\n                    })\n\n                });\n\n            },\n\n            copiar() {\n\n                this.$copyText(this.urlCopy).then(() => {\n\n                    this.urlCopy = \"URL Copiada!\"\n\n                }, function () {\n                    this.urlCopy = \"Erro\"\n                })\n            }\n\n\n\n        }\n    }\n</script>\n\n\n<style scoped src=\"./quiz.css\"></style>"]}]}