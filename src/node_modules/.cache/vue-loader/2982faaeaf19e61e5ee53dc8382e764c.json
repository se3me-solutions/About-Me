{"remainingRequest":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vascomartins/Documents/Dev/aboutme/src/views/CreateQuiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vascomartins/Documents/Dev/aboutme/src/views/CreateQuiz.vue","mtime":1554579661912},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vascomartins/Documents/Dev/aboutme/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport firebase from 'firebase'\n\nexport default {\n    name: \"CreateQuiz\",\n\n    data() {\n        return {\n            respostas: [],\n            respostasBase: [],\n            perguntas: [],\n\n            utilizador: null,\n            documento: '',\n        }\n    },\n\n    /**\n     * Verificar se o utilizador está logado\n     *      - Se estiver\n     *          Verificar se já tem um quiz\n     *              - Enviar para a url do quiz\n     *          - Se não\n     *              * Receber perguntas e respostas\n     *      - Se não\n     *          * Pedir Login\n     */\n    mounted() {\n\n        firebase.auth().onAuthStateChanged((user) => {\n\n            if(user) {\n\n                firebase.firestore().collection(\"users\").where(\"uid\", \"==\", user.uid).get().then((snapshot) => {\n                    this.$store.commit(\"setUser\", snapshot.docs[0].data());\n                    this.utilizador = snapshot.docs[0].data();\n\n                    this.utilizador = this.$store.getters.getUser;\n\n                    if(this.utilizador === null) {\n                        this.$router.push('/login/');\n                        return;\n                    }\n\n                    firebase.firestore().collection(\"users\").where(\"uid\", \"==\", this.utilizador.uid).get().then((snapshot) => {\n                        this.documento = snapshot.docs[0].id;\n\n                        if(this.utilizador.hasQuiz) {\n                            this.$router.push('/quiz/' + this.documento);\n                        }\n                    });\n\n\n\n                    this.receberPerguntasERespostas();\n                })\n            }\n\n        });\n\n    },\n\n    methods: {\n\n        /**\n         * Recebe as perguntas e as respostas do Quiz\n         */\n        receberPerguntasERespostas() {\n\n            firebase.firestore().collection(\"questions\").get().then((snapshot) => {\n\n                snapshot.docs.forEach((doc) => {\n                    this.respostasBase.push(doc.data().answers);\n                    this.perguntas.push(doc.data().question)\n                })\n\n            });\n\n        },\n\n        responderPergunta(resposta) {\n\n            this.respostas.push(resposta);\n\n            if(this.respostas.length === 10) {\n                this.terminarQuiz();\n            }\n        },\n\n        terminarQuiz() {\n\n            firebase.firestore().collection(\"quemSabeMais\").add({\n\n                userId: this.utilizador.uid,\n                doc: this.documento,\n                correctAnswers: this.respostas,\n                otherAnswers: [],\n                leaderboardPontuation: [],\n\n            }).then(() => {\n\n                firebase.firestore().collection(\"users\").doc(this.documento).update({\n                    hasQuiz: true\n                });\n\n                this.$store.commit('setQuiz', true);\n\n                this.$router.push('/quiz/' + this.documento);\n            })\n\n        },\n\n\n    }\n}\n",{"version":3,"sources":["CreateQuiz.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA","file":"CreateQuiz.vue","sourceRoot":"views","sourcesContent":["<template>\n    <div class=\"home\">\n        <div>\n            <div class=\"space\"></div>\n            <span class=\"counter\">{{ respostas.length + 1}} / {{perguntas.length}}</span>\n            <h1>{{perguntas[respostas.length]}}</h1>\n            <div class=\"question-list\">\n\n                <ul>\n                    <li v-for=\"(answer, index) in respostasBase[respostas.length]\" :key=\"index\">\n                        <div v-on:click=\"responderPergunta(index)\">{{answer}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import firebase from 'firebase'\n\n    export default {\n        name: \"CreateQuiz\",\n\n        data() {\n            return {\n                respostas: [],\n                respostasBase: [],\n                perguntas: [],\n\n                utilizador: null,\n                documento: '',\n            }\n        },\n\n        /**\n         * Verificar se o utilizador está logado\n         *      - Se estiver\n         *          Verificar se já tem um quiz\n         *              - Enviar para a url do quiz\n         *          - Se não\n         *              * Receber perguntas e respostas\n         *      - Se não\n         *          * Pedir Login\n         */\n        mounted() {\n\n            firebase.auth().onAuthStateChanged((user) => {\n\n                if(user) {\n\n                    firebase.firestore().collection(\"users\").where(\"uid\", \"==\", user.uid).get().then((snapshot) => {\n                        this.$store.commit(\"setUser\", snapshot.docs[0].data());\n                        this.utilizador = snapshot.docs[0].data();\n\n                        this.utilizador = this.$store.getters.getUser;\n\n                        if(this.utilizador === null) {\n                            this.$router.push('/login/');\n                            return;\n                        }\n\n                        firebase.firestore().collection(\"users\").where(\"uid\", \"==\", this.utilizador.uid).get().then((snapshot) => {\n                            this.documento = snapshot.docs[0].id;\n\n                            if(this.utilizador.hasQuiz) {\n                                this.$router.push('/quiz/' + this.documento);\n                            }\n                        });\n\n\n\n                        this.receberPerguntasERespostas();\n                    })\n                }\n\n            });\n\n        },\n\n        methods: {\n\n            /**\n             * Recebe as perguntas e as respostas do Quiz\n             */\n            receberPerguntasERespostas() {\n\n                firebase.firestore().collection(\"questions\").get().then((snapshot) => {\n\n                    snapshot.docs.forEach((doc) => {\n                        this.respostasBase.push(doc.data().answers);\n                        this.perguntas.push(doc.data().question)\n                    })\n\n                });\n\n            },\n\n            responderPergunta(resposta) {\n\n                this.respostas.push(resposta);\n\n                if(this.respostas.length === 10) {\n                    this.terminarQuiz();\n                }\n            },\n\n            terminarQuiz() {\n\n                firebase.firestore().collection(\"quemSabeMais\").add({\n\n                    userId: this.utilizador.uid,\n                    doc: this.documento,\n                    correctAnswers: this.respostas,\n                    otherAnswers: [],\n                    leaderboardPontuation: [],\n\n                }).then(() => {\n\n                    firebase.firestore().collection(\"users\").doc(this.documento).update({\n                        hasQuiz: true\n                    });\n\n                    this.$store.commit('setQuiz', true);\n\n                    this.$router.push('/quiz/' + this.documento);\n                })\n\n            },\n\n\n        }\n    }\n</script>\n\n<style scoped src=\"./quiz.css\"></style>"]}]}